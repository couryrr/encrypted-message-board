syntax = "proto3";

package user.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/couryrr/backend-playbook-api/gen/user/v1;userv1";
option java_multiple_files = true;
option java_outer_classname = "UserProto";
option java_package = "github.couryrr.backend.playbook.data.gen.user.v1";

// UserService handles user management operations
service UserService {
  // CreateUser creates a new user account
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);

  // GetUser retrieves a user by ID
  rpc GetUser(GetUserRequest) returns (GetUserResponse);

  // UpdateUser updates user information
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);

  // ValidateEmail checks if an email is available and valid
  rpc ValidateEmail(ValidateEmailRequest) returns (ValidateEmailResponse);

  // CheckUsername checks if a username is available
  rpc CheckUsername(CheckUsernameRequest) returns (CheckUsernameResponse);

  // AuthenticateUser validates user credentials
  rpc AuthenticateUser(AuthenticateUserRequest) returns (AuthenticateUserResponse);
}

// User represents a user account
message User {
  string id = 1;
  string username = 2;
  string email = 3;
  string first_name = 4;
  string last_name = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

// CreateUserRequest contains user registration data
message CreateUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  string first_name = 4;
  string last_name = 5;
}

// CreateUserResponse returns the created user or error
message CreateUserResponse {
  oneof result {
    User user = 1;
    ValidationError error = 2;
  }
}

// GetUserRequest contains user ID to retrieve
message GetUserRequest {
  string id = 1;
}

// GetUserResponse returns the user or error
message GetUserResponse {
  oneof result {
    User user = 1;
    NotFoundError error = 2;
  }
}

// UpdateUserRequest contains user data to update
message UpdateUserRequest {
  string id = 1;
  optional string username = 2;
  optional string email = 3;
  optional string first_name = 4;
  optional string last_name = 5;
}

// UpdateUserResponse returns the updated user or error
message UpdateUserResponse {
  oneof result {
    User user = 1;
    ValidationError validation_error = 2;
    NotFoundError not_found_error = 3;
  }
}

// ValidateEmailRequest contains email to validate
message ValidateEmailRequest {
  string email = 1;
}

// ValidateEmailResponse returns validation result
message ValidateEmailResponse {
  bool is_valid = 1;
  bool is_available = 2;
  string message = 3;
}

// CheckUsernameRequest contains username to check
message CheckUsernameRequest {
  string username = 1;
}

// CheckUsernameResponse returns availability result
message CheckUsernameResponse {
  bool is_available = 1;
  string message = 2;
}

// AuthenticateUserRequest contains login credentials
message AuthenticateUserRequest {
  string email = 1;
  string password = 2;
}

// AuthenticateUserResponse returns authentication result
message AuthenticateUserResponse {
  oneof result {
    User user = 1;
    AuthenticationError error = 2;
  }
}

// ValidationError represents validation failures
message ValidationError {
  string code = 1;
  string message = 2;
  repeated FieldError field_errors = 3;
}

// FieldError represents a field-specific validation error
message FieldError {
  string field = 1;
  string message = 2;
}

// NotFoundError represents a resource not found error
message NotFoundError {
  string message = 1;
}

// AuthenticationError represents authentication failures
message AuthenticationError {
  string code = 1;
  string message = 2;
}
